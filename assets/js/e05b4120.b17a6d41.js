"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3124],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),h=s(a),d=n,m=h["".concat(l,".").concat(d)]||h[d]||u[d]||o;return a?r.createElement(m,i(i({ref:t},c),{},{components:a})):r.createElement(m,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=h;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},433:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),i=["components"],p={title:"GraphQL Java aims to be used directly",authors:"andi",slug:"graphql-java-aims-to-be-used-directly"},l=void 0,s={permalink:"/graphql-java-page/blog/graphql-java-aims-to-be-used-directly",editUrl:"https://github.com/graphql-java/graphql-java-page/edit/master/blog/blog/2018-11-10-graphql-java-aims-to-be-used-directly.md",source:"@site/blog/2018-11-10-graphql-java-aims-to-be-used-directly.md",title:"GraphQL Java aims to be used directly",description:"There seems to be a common misconception about GraphQL Java: that you should not use it directly,",date:"2018-11-10T00:00:00.000Z",formattedDate:"November 10, 2018",tags:[],readingTime:1.825,truncated:!1,authors:[{name:"Andreas Marek",title:"Maintainer of GraphQL Java",url:"https://github.com/andimarek",imageURL:"https://github.com/andimarek.png",key:"andi"}],prevItem:{title:"Introducing graphql-java-extended-scalars",permalink:"/graphql-java-page/blog/introducing-extended-scalars"},nextItem:{title:"About breaking changes and Long-term support",permalink:"/graphql-java-page/blog/breaking-changes-and-lts"}},c={authorsImageUrls:[void 0]},u=[],h={toc:u};function d(e){var t=e.components,a=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There seems to be a common misconception about GraphQL Java: that you should not use it directly,\nbut rather use another library build on top of it."),(0,o.kt)("p",null,"We think it is important to make it clear, that this is not the case: GraphQL Java aims to be a library used directly\nwithout any additionally abstraction on top. It was always build with this goal in mind."),(0,o.kt)("p",null,"To be fair: we didn't do a very good job so far to make that clear. For example up\n",(0,o.kt)("a",{parentName:"p",href:"https://www.graphql-java.com/blog/moving-projects/"},"until recently")," we hosted several other projects which\nprovided abstractions on top of GraphQL Java. This was because of historical reasons and we didn't give any\nguidance on when to use what. There are also currently more tutorials out there which don't use GraphQL Java directly\ncompared to tutorials which do."),(0,o.kt)("p",null,"The other reason people might think that GraphQL Java is not suitable is because the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/graphql-java/graphql-java"},"core project"),"\ndoesn't provide any easy way to get a full service with HTTP endpoint up and running.\nAnd the existing third party projects providing for example Spring Boot support\nare adding abstractions."),(0,o.kt)("p",null,"The core project doesn't deal with any form of HTTP or JSON specific things and has on purpose basically no\ndependencies at all. This will not change, but we recognize the need for having an easy way to get a\nfull service up and running. This is why we are currently working on first class Spring (Boot) support."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Update: You can now use ",(0,o.kt)("a",{parentName:"p",href:"https://docs.spring.io/spring-graphql/reference/"},"Spring for GraphQL"),", the official GraphQL integration. It's a collaboration between the Spring and GraphQL Java teams. See our ",(0,o.kt)("a",{parentName:"p",href:"https://www.graphql-java.com/tutorials/getting-started-with-spring-boot/"},"quick start tutorial"),"."))),(0,o.kt)("p",null,"This is not done yet, but it will provide an easy way to integrate GraphQL Java in a Spring (Boot) application\nwithout adding any abstraction on top of GraphQL Java. It will also be extended over time with more advanced features\nlike Apollo Defer support."),(0,o.kt)("p",null,"To recap:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"GraphQL Java aims to be a first class library used directly"),(0,o.kt)("li",{parentName:"ol"},"The ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/graphql-java/graphql-java"},"GraphQL Java core project")," doesn't deal with HTTP/JSON and will continue not do it"),(0,o.kt)("li",{parentName:"ol"},"The ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/graphql-java/graphql-java-spring"},"GraphQL Java Spring project")," will complement\nthe core project in providing comprehensive Spring (Boot) support")),(0,o.kt)("p",null,"Cheers,"),(0,o.kt)("p",null,"Andi"))}d.isMDXComponent=!0}}]);